#### Race lab 1

1. Print all the elements of `[10,20,30,40]` list using a `for` loop.

```python
data = [10,20,30,40]
for i in data:
	print(i)
```

> What is the computational complexity of this script?
>
> O(n), n is 4, so we can also say O(4)

2. Print the first and last element of the same list, separated by a comma and a space e.g. `10, 20`

```python
data = [10,20,30,40]
print(f"{data[0]}, {data[-1]}")
```

3. Count how many elements in a list. You cannot use a build-in function like `len`.

```python
data = [10,20,30,40]
count = 0
for _ in data:
	count+=1
print(count)
```

4. Create a function called `my_len`. The function will accept a list and will return the lenght of the list.

```python
alist = [10,20,30,40]

def my_len(data):
  count = 0
  for _ in data:
    count+=1
  return(count)
print(my_len(alist))
```

5. Count only the positive elements of your list.

```python
data = [10,-20,30,-40]
count = 0
for i in data:
	if i>0:
		count+=1
print(count)
```

6. Find the sum of the negative elements of your list.

```python
data = [10,-20,30,-40]
mysum = 0
for i in data:
	if i<0:
		mysum+=i
print(mysum)
```

7. Swap the first with the last element of the list.

```python
data = [10,-20,30,-40]
temp = data[0]
data[0]=data[-1]
data[-1]=temp
print(data)
```

8. Print the indices of the list using a for loop.

```python
data = [10,20,30,40]
for i in range(len(data)):
	print(i)
```

```python
data = [10,20,30,40]
index = 0
for _ in data:
	print(index)
	index+=1
```

9. Find the `max` of the list.

```python
data = [10,30,40,20]
max = data[0]
# max = float('-inf')
for i in data:
	if i>max:
		max=i
print(max)
```

10. Find the second highest number of the list.

```python
first = second = float('-inf')

for num in data:
    if num > first:
        second = first
        first = num
    elif num > second:
        second = num

print(second)
```

11. Ask user to enter a number. If the user enters the magic number  `10` print `You won` and stop.

```python
magic = str(10)
while(True):
 user_input=input("Enter a magic number: ")
 if user_input==magic:
 	print("You won!")
 	break
```

12. Allow the user to enter only three times.
    * Print `Limit reached` on 3rd effort
    * Print `This is your last effort` on the 2nd effort

```python
magic = str(10)
limit = 2
while(True):
 user_input=input("Enter a magic number: ")
 if limit==0:
 	print("Limit reached")
 	break
 if limit==1:
 	print("This is your last effort")
 if user_input==magic:
 	print("You won!")
 	break
 limit-=1
```

13. Keep memory of the user inputs in a list.

```python
magic = 10
limit = 2
data = []
while(True):
  user_input=float(input("Enter a magic number: "))
  data.append(user_input)
  if limit==0:
    print("Limit reached")
    break
  if limit==1:
    print("This is your last effort")
  if user_input==magic:
    print("You won!")
    break
  limit-=1
print(data)
```

14. Print all the elements of the dictionary.

```python
data = {"name":"Stelios","city":"London","age":20}
for key,value in data.items():
  print(key,value)
```

15. Print the `city` and `age` separated by a comma.

```python
print(f"{data['city']}, {data['age']}")
```

16. Count the occurencies of a list.
    * Assume this list: `words = ["apple", "banana", "apple", "orange", "banana", "apple"]`
    * Generate a dictionary where the key is the name of the element and the value is the related count.

```python
words = ["apple", "banana", "apple", "orange", "banana", "apple"]
word_count={}
for i in words:
  if i not in word_count:
    word_count[i]=1
  else:
    word_count[i]+=1
print(word_count)
```

17. Remove the duplicated data from the list `data=[10,20,20,30,30,30]`.

```python
data=[10,20,20,30,30,30]
print(set(data))

# OR

data = [10, 20, 20, 30, 30, 30]
unique_data = []
for item in data:
    if item not in unique_data:
        unique_data.append(item)
print(unique_data)
```

18. Create a function to search for an element in a list of data:  `search_key(alist, key)`

    This function takes two parameters:

    - `alist`: a list of elements
    - `key`: a value to search for in the list

    The function checks whether the `key` exists in the list:

    - If the key is found, it returns the key.
    - If the key is not found, it returns `-1`.

```python
def lin_search(alist,key):
  for i in alist:
    if i==key:
      return key
  return -1
```

19. Search for number 3 `data=[[1,2],[3,4]]`

```python
for row in data:
	for i in row:
		if i == 3:
			print(i)
			break
```

20. Sort the list `data=[100,20,120,230,130,245]`.

```python
def bubble_sort(arr):
    for i in range(len(arr)):
        for j in range(len(arr) - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
            print("Step:", arr)  # Print after each comparison/swapping
    return arr

data = [5, 3, 8, 4, 2]
bubble_sort(data)
```

21. Find out if two words are anagrams.

```python
def is_anagram(str1, str2):
    return bubble_sort(list(str1)) == bubble_sort(list(str2))

print(is_anagram("listen", "silent"))  # True
print(is_anagram("hello", "world"))    # False
```